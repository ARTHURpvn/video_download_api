import os
import logging
from pathlib import Path

# Configura√ß√£o de logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Diret√≥rio de downloads - adaptado para produ√ß√£o (Render)
def get_downloads_dir():
    """Obt√©m o diret√≥rio de downloads - funciona em dev e produ√ß√£o"""
    # Em produ√ß√£o (Render), usar /tmp que √© o √∫nico diret√≥rio grav√°vel
    if os.environ.get('RENDER'):
        downloads_dir = Path('/tmp/videos')
    else:
        # Em desenvolvimento, usar Downloads do usu√°rio
        home = Path.home()
        downloads_dir = home / "Downloads" / "luiz_da_o_butico"

    downloads_dir.mkdir(parents=True, exist_ok=True)
    logger.info(f"üìÅ Diret√≥rio de downloads: {downloads_dir}")
    return str(downloads_dir)

DOWNLOAD_DIR = get_downloads_dir()

# Configura√ß√µes do CORS - permitir frontend
CORS_ORIGINS = [
    "http://localhost:3000",
    "http://localhost:3001",
    "https://*.vercel.app",
    "https://*.netlify.app",
    "https://*.render.com",
    "*"  # Para desenvolvimento - remover em produ√ß√£o se necess√°rio
]
CORS_CREDENTIALS = True
CORS_METHODS = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
CORS_HEADERS = ["*"]

# Configura√ß√µes da API
API_TITLE = "YouTube Video Downloader API"
API_VERSION = "1.0.0"
API_DESCRIPTION = "API para download de v√≠deos do YouTube com suporte a streaming em tempo real"

# Porta para o servidor (Render usa a vari√°vel PORT)
PORT = int(os.environ.get('PORT', 8000))
HOST = os.environ.get('HOST', '0.0.0.0')
